// Generated by data binding compiler. Do not edit!
package org.codejudge.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.Deprecated;
import java.lang.Object;
import org.codejudge.android.R;
import org.codejudge.android.data.model.Restaurant;

public abstract class RestaurantItemBinding extends ViewDataBinding {
  @NonNull
  public final TextView address;

  @NonNull
  public final ShapeableImageView foodImage;

  @NonNull
  public final TextView openStatus;

  @NonNull
  public final TextView rating;

  @NonNull
  public final LinearLayout ratingLayout;

  @NonNull
  public final MaterialCardView restaurantCard;

  @NonNull
  public final TextView restaurantName;

  @NonNull
  public final TextView restaurantText;

  @Bindable
  protected Restaurant mRestaurant;

  protected RestaurantItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView address, ShapeableImageView foodImage, TextView openStatus, TextView rating,
      LinearLayout ratingLayout, MaterialCardView restaurantCard, TextView restaurantName,
      TextView restaurantText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.address = address;
    this.foodImage = foodImage;
    this.openStatus = openStatus;
    this.rating = rating;
    this.ratingLayout = ratingLayout;
    this.restaurantCard = restaurantCard;
    this.restaurantName = restaurantName;
    this.restaurantText = restaurantText;
  }

  public abstract void setRestaurant(@Nullable Restaurant restaurant);

  @Nullable
  public Restaurant getRestaurant() {
    return mRestaurant;
  }

  @NonNull
  public static RestaurantItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.restaurant_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RestaurantItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RestaurantItemBinding>inflateInternal(inflater, R.layout.restaurant_item, root, attachToRoot, component);
  }

  @NonNull
  public static RestaurantItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.restaurant_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RestaurantItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RestaurantItemBinding>inflateInternal(inflater, R.layout.restaurant_item, null, false, component);
  }

  public static RestaurantItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RestaurantItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (RestaurantItemBinding)bind(component, view, R.layout.restaurant_item);
  }
}
